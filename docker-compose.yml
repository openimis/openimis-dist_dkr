version: "2.4"

services:
  db:
    container_name: ${PROJECT_NAME:-openimis}-db
    build:
      context: https://github.com/openimis/database_postgresql.git#${DB_BRANCH:-develop}
      args:
        - POSTGRES_PASSWORD=${DB_PASSWORD}
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - database:/var/lib/postgresql/data
    restart: always
    networks:
      openimis-net:
        ipv4_address: 172.20.${IP_SUB:-20}.99

  backend:
    container_name: ${PROJECT_NAME:-openimis}-backend
    build:
      context: https://github.com/openimis/openimis-be_py.git#${BE_BRANCH:-develop}
      args:
        OPENIMIS_CONF_JSON: ${OPENIMIS_BE_CONF_JSON}
    image: openimis/backend:${PROJECT_NAME:-local}
    volumes:
      - photos:/openimis-be/openIMIS/images/insurees
    command: start
    environment: &backend-env
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ENGINE=${DB_ENGINE:-django.db.backends.postgresql}
      - SITE_ROOT=${SITE_ROOT:-api}
      - SITE_URL=${NEW_OPENIMIS_HOST}
      - CELERY_BROKER_URL=amqp://rabbitmq
      - PHOTO_ROOT_PATH=images/insurees
      - DJANGO_LOG_LEVEL=${DJANGO_LOG_LEVEL}
      - DJANGO_LOG_HANDLER=${DJANGO_LOG_HANDLER}
      - DJANGO_MIGRATE=${DJANGO_MIGRATE}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      openimis-net:
         ipv4_address: 172.20.${IP_SUB:-20}.12

  frontend:
    container_name: ${PROJECT_NAME:-openimis}-frontend
    build:
      context: https://github.com/openimis/openimis-fe_js.git#${FE_BRANCH:-develop}
      args:
         OPENIMIS_CONF_JSON: ${OPENIMIS_FE_CONF_JSON}
    command: serve -s build
    environment:
      - PORT=5000
      - REACT_APP_API_URL=${SITE_ROOT:-api}
      - PUBLIC_URL=/front
      - NEW_OPENIMIS_HOST=${NEW_OPENIMIS_HOST}
      - OPENIMIS_CONF_JSON=${OPENIMIS_FE_CONF_JSON}
    restart: always
    networks:
      openimis-net:
        ipv4_address: 172.20.${IP_SUB:-20}.13

  gateway:
    container_name: ${PROJECT_NAME:-openimis}-gateway
    build:
      context: https://github.com/openimis/openimis-gateway_dkr.git#${GW_BRANCH:-develop}
    environment:
      - NEW_OPENIMIS_HOST=${NEW_OPENIMIS_HOST}
    #volumes:
    #  - ./conf/gateway:/conf
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      timeout: 3s
      retries: 5
    restart: always
    networks:
      openimis-net:
        ipv4_address: 172.20.${IP_SUB:-20}.14
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    depends_on:
      - backend
      - frontend

  worker:
    container_name: ${PROJECT_NAME:-openimis}-worker
    image: openimis/backend:${PROJECT_NAME:-local}
    command: worker
    restart: always
    volumes:
      - photos:/openimis-be/openIMIS/images/insurees
    depends_on:
      - backend
    environment: *backend-env
    networks:
      openimis-net:
         ipv4_address: 172.20.${IP_SUB:-20}.15

  rabbitmq:
    container_name: ${PROJECT_NAME:-openimis}-rabbitmq
    image: rabbitmq:3-management
    restart: always
    networks:
      openimis-net:
         ipv4_address: 172.20.${IP_SUB:-20}.16

  restapi:
    container_name: ${PROJECT_NAME:-openimis}-restapi
    build:
      context:  https://github.com/openimis/rest_api_c-sharp.git#${RESTAPI_BRANCH:-develop}
      args:
        BUILD-FLAVOUR: ${RESTAPI_BUILD_FLAVOUR:-Release}
    volumes:
      - ./conf/restapi:/app/config
      - ./logs:/app/log
      - photos:/app/photos
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      openimis-net:
         ipv4_address: 172.20.${IP_SUB:-20}.17

volumes:
  database:
  photos:

networks:
  openimis-net:
    name: ${PROJECT_NAME:-openimis}-net
    ipam:
      config:
        - subnet: 172.20.${IP_SUB:-20}.0/24
          ip_range: 172.20.${IP_SUB:-20}.0/24
