version: "2.4"

services:
  db:
    container_name: ${PROJECT_NAME:-openimis}-db
    image: ghcr.io/openimis/openimis-pgsql:${DB_TAG:-latest}
    environment:
      - DB_USER_PASSWORD=${DB_PASSWORD}
      - SA_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - ACCEPT_EULA=${ACCEPT_EULA}
    healthcheck:
      test: "bash /app/healthcheck.sh"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 100s
    networks:
      openimis-net:
    volumes:
      - database:/var/opt/mssql/data
    ports:
      - 1433:1433
  ## WARNING:
    ## exposing the database port outside the openimis-net network
    ## may lead to security issue (depending on your network topology)
    # ports:
    #  - 1433:1433
  backend:
    container_name: ${PROJECT_NAME:-openimis}-api
    image: ghcr.io/openimis/openimis-be:${BE_TAG:-develop}
    command: start
    volumes:
      - photos:/openimis-be/openIMIS/images/insurees
    environment: &backend-env
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ENGINE=${DB_ENGINE}
      - SITE_ROOT=api
      - DEBUG=True
      - DJANGO_LOG_LEVEL=DEBUG
      - SITE_URL=${NEW_OPENIMIS_HOST}
      - CELERY_BROKER_URL=amqp://rabbitmq
    depends_on:  
      db:
        condition: service_healthy
    networks:
      openimis-net:

  frontend:
    container_name: ${PROJECT_NAME:-openimis}-frontend
    image: ghcr.io/openimis/openimis-fe:${FE_TAG:-develop}
    environment:
      - REACT_APP_API_URL=api
      - NEW_OPENIMIS_HOST=${NEW_OPENIMIS_HOST}
      - OPENIMIS_CONF_JSON=${OPENIMIS_FE_CONF_JSON}
    networks:
      openimis-net:
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    depends_on:
      - backend
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      # uncomment to use custom openimis.conf
      #- ./conf/nginx:/conf/

  worker:
    container_name: ${PROJECT_NAME:-openimis}-worker
    image: ghcr.io/openimis/openimis-be:${BE_TAG:-develop}
    command: worker
    restart: always
    volumes:
      - photos:/openimis-be/openIMIS/images/insurees
    depends_on: 
      - backend
    environment: *backend-env
    networks:
      openimis-net:
  rabbitmq:
    container_name: ${PROJECT_NAME:-openimis}-rabbitmq
    image: rabbitmq:3-management
    restart: always
    networks:
      openimis-net:
  restapi:
    container_name: ${PROJECT_NAME:-openimis}-restapi
    image: ghcr.io/openimis/openimis-rest_api:${RESTAPI_TAG:-develop}
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      #- ./conf/restapi:/app/config
      - ./logs:/app/log
      - photos:/app/photos
      - ./Escape:/app/Escape
      - ./FromPhone:/app/FromPhone
    restart: always
    depends_on:  
      db:
        condition: service_healthy
    networks:
      openimis-net:
networks:
  openimis-net:
volumes:
  database:
  photos:
