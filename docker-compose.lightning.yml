version: "3.7"

x-lightning: &default-app
  platform: linux/amd64
  build:
    dockerfile: Dockerfile-dev-
    context: "https://github.com/openimis/openimis-lightning_dkr.git#develop"
    args:
      - "MIX_ENV=${MIX_ENV:-dev}"
      - "NODE_ENV=${NODE_ENV:-development}"
  ports:
    - "4000:4000"
  env_file:
    - ".env.lightning"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: false
  volumes:
    - "${LIGHTNING_VOLUME:-./priv/static:/app/priv/static}"
  networks:
    - openimis-net



services:
  lightning_db:
    container_name: ${PROJECT_NAME:-openimis}-lightning-db
    image: "postgres:14.2-alpine"
    build:
      target: ${INIT_MODE:-base}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PORT
      - PGPORT=${POSTGRES_PORT}
    volumes:
      - lightning_database:/var/lib/postgresql/data
    restart: always
    networks:
      - openimis-net
    env_file:
      - ".env.lightning"
  lightning:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:4000/health_check}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    depends_on:
      - lightning_db


networks:
  openimis-net:

volumes:
  lightning_database: