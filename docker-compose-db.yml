version: "2.4"

services:
  db:
    container_name: openimis-db
    build:
      context: https://github.com/openimis/openimis-db_dkr.git#${DB_BRANCH:-main}:/
      args:
        - ACCEPT_EULA=${ACCEPT_EULA}
        - SA_PASSWORD=${DB_PASSWORD}
        - SQL_SCRIPT_URL=${DB_SQL_SCRIPT}
        - DB_SQL_SCRIPT_INIT_URL = ${DB_SQL_SCRIPT_INIT_URL}
    networks:
      openimis-net:
        ipv4_address: 172.20.${IP_SUB:-20}.2
# WARNING:
# exposing the database port outside the openimis-net network
# may lead to security issue (depending on your network topology)
#    ports:
#     - "1433:1433"
  backend:
    container_name: ${PROJECT_NAME:-openimis}-backend
    build:
      context: https://github.com/openimis/openimis-be_py.git#${BE_BRANCH:-main}:/
      args:
        OPENIMIS_CONF_JSON: ${OPENIMIS_BE_CONF_JSON}
    command: start
    environment: &backend-env
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REMOTE_USER_AUTHENTICATION=False
      - SITE_ROOT=api
      - SITE_URL=${NEW_OPENIMIS_HOST}
      - CELERY_BROKER_URL=amqp://localhost
# Use localhost when the worker is not configured, rabbitmq when it is
#      - CELERY_BROKER_URL=amqp://rabbitmq
    networks:
      openimis-net:
         ipv4_address: 172.20.${IP_SUB:-20}.6
# WARNING:
# exposing the backend port outside the openimis-net network
# may lead to security issue (depending on your network topology)
    ports:
      - "8000:8000"
# OPTION:
# if you want to ensure the (demo) db is started prior to backend,
# simply add the following dependency
    depends_on:
      - db
#  rabbitmq:
#    container_name: ${PROJECT_NAME:-openimis}-rabbitmq
## 3-management is the 3.x version including the admin interface. For a barebones image, use 3-alpine
#    image: rabbitmq:3-management
#    networks:
#      - openimis-net
#    # WARNING:
#    # exposing the frontend port outside the openimis-net network
#    # may lead to security issue (depending on your network topology)
#    ports:
## Management port, default credentials: guest/guest
#      - "15672:15672"
## Other RabbitMQ ports
#      - "5672:5672"
#      - "6379:6379"
#      - "4369:4369"
#  worker:
#    build:
#      context: https://github.com/openimis/openimis-be_py.git#${BE_BRANCH:-main}:/
#      args:
#        OPENIMIS_CONF_JSON: ${OPENIMIS_BE_CONF_JSON}
#    environment: *backend-env
#    command: worker
#    container_name: ${PROJECT_NAME:-openimis}-worker
#    networks:
#      openimis-net:
#         ipv4_address: 172.20.${IP_SUB:-20}.5
    ## OPTION:
    ## if you want to ensure the (demo) db is started prior to backend,
    ## simply add the following dependency
    # depends_on:
    #   - db
  frontend:
    platform: linux
    container_name: ${PROJECT_NAME:-openimis}-frontend
    build:
      context: https://github.com/openimis/openimis-fe_js.git#${FE_BRANCH:-main}:/
      args:
         OPENIMIS_CONF_JSON: ${OPENIMIS_FE_CONF_JSON}
    command: serve -s build
    environment:
      - PORT=5000
      - REACT_APP_API_URL=/iapi
      - NEW_OPENIMIS_HOST=${NEW_OPENIMIS_HOST}
      - LEGACY_OPENIMIS_HOST=${LEGACY_OPENIMIS_HOST}
      - OPENIMIS_CONF_JSON=${OPENIMIS_FE_CONF_JSON}
    networks:
      openimis-net:
              ipv4_address: 172.20.${IP_SUB:-20}.3
    ## WARNING:
    ## exposing the frontend port outside the openimis-net network
    ## may lead to security issue (depending on your network topology)
    ports:
      - "5000:5000"
  gateway:
    platform: linux
    container_name: ${PROJECT_NAME:-openimis}-gateway
    build:
      context: https://github.com/openimis/openimis-gateway_dkr.git#${GW_BRANCH:-main}:/
    environment:
      - NEW_OPENIMIS_HOST=${NEW_OPENIMIS_HOST}
      - LEGACY_OPENIMIS_HOST=${LEGACY_OPENIMIS_HOST}
    volumes:
      - ./conf:/conf
    networks:
      openimis-net:
         ipv4_address: 172.20.${IP_SUB:-20}.2
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    depends_on:
      - backend
      - frontend
networks:
  openimis-net:
    ipam:
      config:
        - subnet: 172.20.${IP_SUB:-20}.0/24
          ip_range: 172.20.${IP_SUB:-20}.0/24
